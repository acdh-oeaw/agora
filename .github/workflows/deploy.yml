name: Build and deploy Agora SP 

on:
  push:
    branches: [main]

jobs:
  build:
    name: Build Agora 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2 
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Agora frontend
        uses: docker/build-push-action@v3
        with:
          context: frontend/.
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/acdh-oeaw/agora/agora-frontend:latest
      - name: Build and push Agora backend
        uses: docker/build-push-action@v3
        with:
          context: ./
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/acdh-oeaw/agora/agora-backend:latest
        - name: Build and push Selenium python tests
        uses: docker/build-push-action@v3
        with:
          context: selenium-python-tests/.
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/acdh-oeaw/agora/selenium-python-tests:latest

  deploy:
    name: Deploy Agora SP
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Deploy
      uses: tale/kubectl-action@v1
      with:
        base64-kube-config: ${{ secrets.C2_KUBE_CONFIG }}
        kubectl-version: v1.21.8
    - run: kubectl -n agora-sp apply -f Kubernetes/
